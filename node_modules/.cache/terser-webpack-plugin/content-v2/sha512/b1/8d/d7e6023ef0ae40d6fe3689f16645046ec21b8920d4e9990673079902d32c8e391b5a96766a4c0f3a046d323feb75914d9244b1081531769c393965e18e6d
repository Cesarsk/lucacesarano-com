{"map":"{\"version\":3,\"sources\":[\"/Users/cesarsk/Projects/Web Design/NodeJS/es4-my-app/src/Clock.js\",\"/Users/cesarsk/Projects/Web Design/NodeJS/es4-my-app/src/Toggle.js\",\"/Users/cesarsk/Projects/Web Design/NodeJS/es4-my-app/src/App.js\",\"/Users/cesarsk/Projects/Web Design/NodeJS/es4-my-app/src/serviceWorker.js\",\"/Users/cesarsk/Projects/Web Design/NodeJS/es4-my-app/src/index.js\",\"/Users/cesarsk/Projects/Web Design/NodeJS/es4-my-app/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/Users/cesarsk/Projects/Web Design/NodeJS/es4-my-app/src/logo.svg\"],\"names\":[\"Clock\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"date\",\"Date\",\"_this2\",\"timerID\",\"setInterval\",\"tick\",\"clearInterval\",\"setState\",\"react_default\",\"a\",\"createElement\",\"toLocaleTimeString\",\"Component\",\"Toggle\",\"handleClick\",\"isToggleOn\",\"bind\",\"assertThisInitialized\",\"onClick\",\"React\",\"Welcome\",\"name\",\"App\",\"className\",\"src_Clock\",\"src\",\"logo\",\"alt\",\"src_Toggle\",\"href\",\"target\",\"rel\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\",\"module\",\"exports\",\"__webpack_require__\",\"p\"],\"mappings\":\"6QAmCeA,qBAhCX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CAACC,KAAM,IAAIC,MAFTT,mFAKC,IAAAU,EAAAP,KAChBA,KAAKQ,QAAUC,YACX,WAAA,OAAMF,EAAKG,QACX,oDAKJC,cAAcX,KAAKQ,wCAInBR,KAAKY,SAAS,CACVP,KAAM,IAAIC,wCAKd,OACIO,EAAAC,EAAAC,cAAA,MAAA,KACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,mCACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,SAAWf,KAAKI,MAAMC,KAAKW,qBAA3B,aA3BQC,EAAAA,mBCuBHC,cAtBb,SAAAA,EAAYtB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkB,IACjBrB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoB,GAAAf,KAAAH,KAAMJ,KAORuB,YAAc,WACVtB,EAAKe,SAAS,SAAAR,GAAK,MAAK,CACpBgB,YAAahB,EAAMgB,eARzBvB,EAAKO,MAAQ,CAACgB,YAAY,GAG1BvB,EAAKsB,YAActB,EAAKsB,YAAYE,KAAjBvB,OAAAwB,EAAA,EAAAxB,CAAAA,OAAAwB,EAAA,EAAAxB,CAAAD,KALFA,wEAcjB,OACEgB,EAAAC,EAAAC,cAAA,SAAA,CAAQQ,QAASvB,KAAKmB,aACnBnB,KAAKI,MAAMgB,WAAa,2BAA+B,6BAjB7CI,EAAAA,EAAMP,WCmB3B,SAASQ,EAAQ7B,GACf,OAAOiB,EAAAC,EAAAC,cAAA,KAAA,KAAA,UAAYnB,EAAM8B,UA+BZC,mLA1BX,OACEd,EAAAC,EAAAC,cAAA,MAAA,CAAKa,UAAU,OACTf,EAAAC,EAAAC,cAACc,EAAD,MACJhB,EAAAC,EAAAC,cAAA,SAAA,CAAQa,UAAU,cAChBf,EAAAC,EAAAC,cAAA,MAAA,CAAKe,IAAKC,EAAAA,EAAMH,UAAU,WAAWI,IAAI,SACzCnB,EAAAC,EAAAC,cAAA,IAAA,KAEEF,EAAAC,EAAAC,cAACU,EAAD,CAASC,KAAK,SACdb,EAAAC,EAAAC,cAACkB,EAAD,OAIFpB,EAAAC,EAAAC,cAAA,IAAA,CACEa,UAAU,WACVM,KAAK,gDACLC,OAAO,SACPC,IAAI,uBAJN,6CAdQnB,EAAAA,WCbEoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OACT9B,EAAAC,EAAAC,cAAC6B,EAAD,MAASC,SAASC,eAAe,SD0H3B,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB\",\"sourcesContent\":[\"import React, { Component } from 'react';\\n\\nclass Clock extends Component {\\n    constructor(props) {\\n        super(props);\\n        this.state = {date: new Date()};\\n    }\\n\\n    componentDidMount() {\\n        this.timerID = setInterval(\\n            () => this.tick(),\\n            1000\\n          );      \\n    }\\n  \\n    componentWillUnmount() {\\n        clearInterval(this.timerID);\\n    }\\n\\n    tick() {\\n        this.setState({\\n            date: new Date()\\n        });\\n    }\\n\\n    render() {\\n        return (\\n            <div>\\n            <h1>Hello, I'm your personal Clock!</h1>\\n            <h2>It is {this.state.date.toLocaleTimeString()}.</h2>    \\n            </div>\\n        );\\n    }\\n}\\n\\nexport default Clock;\",\"import React, { Component } from 'react';\\n\\nclass Toggle extends React.Component {\\n    constructor(props) {\\n      super(props);\\n      this.state = {isToggleOn: true};\\n  \\n      // This binding is necessary to make `this` work in the callback\\n      this.handleClick = this.handleClick.bind(this);\\n    }\\n\\n    handleClick = () => {\\n        this.setState(state => ({\\n            isToggleOn: !state.isToggleOn}));    \\n      }\\n  \\n    render() {\\n      return (\\n        <button onClick={this.handleClick}>\\n          {this.state.isToggleOn ? 'I\\\\'m your Toggle! I\\\\'m ON!' : 'You shut me OFF :('}\\n        </button>\\n      );\\n    }\\n  }\\n\\n  export default Toggle;\",\"import React, { Component } from 'react';\\nimport logo from './logo.svg';\\nimport './App.css';\\nimport Clock from './Clock.js';\\nimport Toggle from './Toggle';\\n\\nconst user = {\\n  firstName: 'Luca',\\n  lastName: 'Cesarano',\\n};\\n\\nfunction formatName(user) {\\n  return user.firstName + ' ' + user.lastName;\\n}\\n\\nfunction getGreeting(user) {\\n  if(user) {\\n    return <h1>Hello, {formatName(user)}!</h1>;\\n  } else return <h1>Hello, Stranger!</h1>;\\n}\\n\\nfunction Welcome(props) {\\n  return <h1>Hello, {props.name}</h1>;\\n}\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n            <Clock />\\n        <header className=\\\"App-header\\\">\\n          <img src={logo} className=\\\"App-logo\\\" alt=\\\"logo\\\" />\\n          <p>\\n            {/* Invocazione tramite funzione Welcome + Props e poi con funzione*/}\\n            <Welcome name=\\\"Luca\\\" ></Welcome>\\n            <Toggle />\\n            {/* getGreeting(user) */}\\n            {/* Invocazione dell'orologio su classe e file separati */}\\n          </p>\\n          <a\\n            className=\\\"App-link\\\"\\n            href=\\\"https://reactjs.org/docs/handling-events.html\\\"\\n            target=\\\"_blank\\\"\\n            rel=\\\"noopener noreferrer\\\"\\n          >\\n            Riprendi da dove hai interrotto!\\n          </a>\\n        </header>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n  \\nReactDOM.render(\\n<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\",\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(e,t,n){e.exports=n(18)},16:function(e,t,n){},17:function(e,t,n){},18:function(e,t,n){\"use strict\";n.r(t);var a=n(0),o=n.n(a),r=n(8),c=n.n(r),l=(n(16),n(1)),i=n(2),u=n(4),s=n(3),m=n(5),h=n(9),d=n.n(h),p=(n(17),function(e){function t(e){var n;return Object(l.a)(this,t),(n=Object(u.a)(this,Object(s.a)(t).call(this,e))).state={date:new Date},n}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"componentDidMount\",value:function(){var e=this;this.timerID=setInterval(function(){return e.tick()},1e3)}},{key:\"componentWillUnmount\",value:function(){clearInterval(this.timerID)}},{key:\"tick\",value:function(){this.setState({date:new Date})}},{key:\"render\",value:function(){return o.a.createElement(\"div\",null,o.a.createElement(\"h1\",null,\"Hello, I'm your personal Clock!\"),o.a.createElement(\"h2\",null,\"It is \",this.state.date.toLocaleTimeString(),\".\"))}}]),t}(a.Component)),f=n(6),g=function(e){function t(e){var n;return Object(l.a)(this,t),(n=Object(u.a)(this,Object(s.a)(t).call(this,e))).handleClick=function(){n.setState(function(e){return{isToggleOn:!e.isToggleOn}})},n.state={isToggleOn:!0},n.handleClick=n.handleClick.bind(Object(f.a)(Object(f.a)(n))),n}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return o.a.createElement(\"button\",{onClick:this.handleClick},this.state.isToggleOn?\"I'm your Toggle! I'm ON!\":\"You shut me OFF :(\")}}]),t}(o.a.Component);function O(e){return o.a.createElement(\"h1\",null,\"Hello, \",e.name)}var b=function(e){function t(){return Object(l.a)(this,t),Object(u.a)(this,Object(s.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return o.a.createElement(\"div\",{className:\"App\"},o.a.createElement(p,null),o.a.createElement(\"header\",{className:\"App-header\"},o.a.createElement(\"img\",{src:d.a,className:\"App-logo\",alt:\"logo\"}),o.a.createElement(\"p\",null,o.a.createElement(O,{name:\"Luca\"}),o.a.createElement(g,null)),o.a.createElement(\"a\",{className:\"App-link\",href:\"https://reactjs.org/docs/handling-events.html\",target:\"_blank\",rel:\"noopener noreferrer\"},\"Riprendi da dove hai interrotto!\")))}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(o.a.createElement(b,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},9:function(e,t,n){e.exports=n.p+\"static/media/logo.5d5d9eef.svg\"}},[[10,1,2]]]);","extractedComments":[]}